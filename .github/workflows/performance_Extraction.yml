name: Verify and Extract Performance

on:
  push:
    paths:
      - 'Algos/**/*.gz'
jobs:
  verify:
    runs-on: ubuntu-latest
    steps: 
    
    - name: Checkout repository
      uses: actions/checkout@v3

      # checkout is used here as its more clean and it guarrantees that we get the version we want and that all context is maintained.
    - name: Checkout Verifier Repository
      uses: actions/checkout@v4
      with:
        repository: GraphVertexColoring/coloring-verifier
        path: coloring-verifier  # Clone this into a subdirectory
    
    - name: Checkout gvc-instances
      uses: actions/checkout@v4
      with:
        repository: GraphVertexColoring/gvc-instances
        path: gvc-instances
    
    - name: Set up Make and GCC
      run: sudo apt-get install build-essential # this ensures make and gcc are installed
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with: 
        python-version: '3.10'

    - name: Build Verifier and Make Executable
      run: |
        cd coloring-verifier/src
        make CC=gcc
        chmod +x coloring-verifier

    - name: Verify solutions
      run: | # ensures verification only happens on newly added solutions
        if git rev-parse --verify HEAD~1 >/dev/null 2>&1; then
          base=HEAD~1
        else
          base=$(git hash-object -t tree /dev/null)
        fi

        # find new or modified solutions withing the directories under Algos
        # supports up to 9 different run folders
        changed_dirs=$(git diff --name-only --diff-filter=AM "$base" HEAD | grep '^Algos/run[1-9]\+/' | grep '\.sol\.gz$' | awk -F/ '{print $2"/"$3}' | sort -u)


        echo "Running verification on updated solutions..."

        for dir in $changed_dirs; do
          echo "Verifying solutions in Algos/$dir..."
          python .github/scripts/verify.py "Algos/$dir" 
        done

    - name: Commit and Push Changes to Archive
      if: success() # Should only do this if the previous steps succeeded.
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add Algos
        git commit -m "updates the algos to remove the invalid solutions" || exit 0
        git push

    - name: Checkout Performance Extractor Repository
      uses: actions/checkout@v4
      with:
        repository: GraphVertexColoring/gvc-perf
        path: gvc-perf

    - name: Checkout coloring Repository
      uses: actions/checkout@v4
      with:
        repository: GraphVertexColoring/coloring
        token: ${{ secrets.ORG_PAT }}
        path: coloring
    
    # Noticed a problem here where if you rerun it even with a non allowed instance it will still work since this doesnt only run on the new algorithms.
    - name: Extract Performance
      working-directory: gvc-perf
      run: |
        python performance_extractor.py 

    - name: Update Best
      run: |
        python update_best.py
      working-directory: .github/scripts

    - name: Push Results to coloring Repo
      run: |
        cd coloring
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git add Resources
        git commit -m "Automated Performance Extraction Results" || echo "No changes to commit" 
        git push origin master